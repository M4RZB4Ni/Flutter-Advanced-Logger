// Mocks generated by Mockito 5.4.4 from annotations
// in log_engine/test/src/mocks/logger_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:log_engine/src/core/base_logger.dart' as _i2;
import 'package:log_engine/src/core/environment_provider.dart' as _i4;
import 'package:log_engine/src/core/log_priority.dart' as _i3;
import 'package:log_engine/src/core/logger_provider.dart' as _i6;
import 'package:log_engine/src/remote_logger/remote_logger_interface.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BaseLogger].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseLogger extends _i1.Mock implements _i2.BaseLogger {
  MockBaseLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void log(
    _i3.LogPriority? priority,
    String? message, {
    String? tag,
    Object? error,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            priority,
            message,
          ],
          {
            #tag: tag,
            #error: error,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void warn(
    String? message, {
    String? tag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #warn,
          [message],
          {#tag: tag},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void error(
    String? message, {
    Object? error,
    String? tag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #error,
          [message],
          {
            #error: error,
            #tag: tag,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debug(
    String? message, {
    String? tag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #debug,
          [message],
          {#tag: tag},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void info(
    String? message, {
    String? tag,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #info,
          [message],
          {#tag: tag},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EnvironmentProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentProvider extends _i1.Mock implements _i4.EnvironmentProvider {
  MockEnvironmentProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isProduction() => (super.noSuchMethod(
        Invocation.method(
          #isProduction,
          [],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [IRemoteLogger].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRemoteLogger extends _i1.Mock implements _i5.IRemoteLogger {
  MockIRemoteLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void log(
    _i3.LogPriority? priority,
    String? message, {
    String? tag,
    Object? error,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            priority,
            message,
          ],
          {
            #tag: tag,
            #error: error,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoggerProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggerProvider extends _i1.Mock implements _i6.LoggerProvider {
  MockLoggerProvider() {
    _i1.throwOnMissingStub(this);
  }
}
